/**
 * Aion 2.0.0
 * Copyright (c) 2013, Peter Wood.
 */
var Aion={toMilliseconds:function(){var e=0;if(arguments.length===0){throw"No time span specified for call to Aion.toMilliseconds() function."}if(typeof arguments[0]!=="number"){throw"Non-numeric time span value specified in call to Aion.toMilliseconds() function."}e=arguments[0];unit=arguments.length>1?(""+arguments[1]).toLowerCase():"seconds";switch(unit){case"day":case"days":e=Math.round(e*864e5);break;case"hour":case"hours":e=Math.round(e*36e5);break;case"millisecond":case"milliseconds":e=Math.round(e*1);break;case"minute":case"minutes":e=Math.round(e*6e4);break;case"second":case"seconds":e=Math.round(e*1e3);break;case"week":case"weeks":e=Math.round(e*6048e5);break;default:throw"Unrecognised time unit '"+unit+"' encountered."}return e},generic:{action:null,afterCancel:null,afterComplete:null,before:function(e){this.beforeStart=e;return this},beforeStart:null,go:function(){return this.start()},isActive:function(){return this.status=="active"},finished:null,started:null,status:"pending"},duration:{cancel:function(){if(this.timeout){clearTimeout(this.timeout);this.timeout=null;this.started=null;this.status="cancelled";if(this.afterCancel){this.afterCancel(this)}}return this},"do":function(e){this.action=e;return this},expended:function(){return this.timeout?(new Date).getTime()-this.started.getTime():0},isFinished:function(){return this.status==="complete"},onComplete:function(){if(this.action){this.action(this);this.timeout=null;this.status="complete";this.finished=new Date;if(this.afterComplete){this.afterComplete(this)}}},remaining:function(){return this.timeout?this.total-this.expended():this.duration},start:function(){if(!this.timeout){var e=this,t=false;if(this.beforeStart){t=!this.beforeStart()}if(!t){this.started=new Date;this.status="active";this.timeout=setTimeout(function(){e.onComplete.call(e)},this.total)}}else{throw"Start called on already active duration object."}return this},timeout:null},interval:{"for":function(){var e=arguments.length>1?arguments[1]:"seconds";if(arguments.length==0){throw"No time span specified in call to interval after() function."}this.maximum=Aion.toMilliseconds(arguments[0],e);return this},cancel:function(){if(this.interval){clearInterval(this.interval);this.interval=null;this.started=null;this.status="cancelled";if(this.afterCancel){this.afterCancel(this)}}},"do":function(e){this.action=e;return this},expended:function(){return this.interval?(new Date).getTime()-this.started.getTime():0},maximum:null,onComplete:function(){if(this.interval){clearInterval(this.interval);this.interval=null;this.status="complete";this.finished=new Date;if(this.afterComplete){this.afterComplete(this)}}},onInterval:function(){if(this.action){this.action(this);if(this.maximum&&this.expended()>=this.maximum){this.onComplete()}}},start:function(){if(!this.interval){var e=this;if(this.beforeStart){stop=!this.beforeStart()}this.started=new Date;this.status="active";this.interval=setInterval(function(){e.onInterval.call(e)},this.period)}else{throw"Start called on an already active interval object."}},then:function(e){this.afterComplete=e;return this}},"in":function(){var e={type:"duration"},t=arguments.length>1?arguments[1]:"seconds";if(arguments.length==0){throw"No time span specified for call to Aion.in() function."}e.total=this.toMilliseconds(arguments[0],t);for(var n in this.generic){e[n]=this.generic[n]}for(var n in this.duration){e[n]=this.duration[n]}return e},every:function(){var e={type:"interval"},t=arguments.length>1?arguments[1]:"seconds";if(arguments.length==0){throw"No time span specified for call to Aion.every() function."}e.period=Aion.toMilliseconds(arguments[0],t);for(var n in this.generic){e[n]=this.generic[n]}for(var n in this.interval){e[n]=this.interval[n]}return e}}